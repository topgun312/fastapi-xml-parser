version: '3.8'

services:
  db:
    image: postgres:15
    container_name: db_app
    restart: always
    command: -p 5432
    expose:
      - 5432
    env_file:
      - .env-non-dev
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - custom

  redis:
    image: redis:7
    container_name: redis_app
    command: --port 5370
    expose:
      - 5370
    networks:
      - custom

  app:
    build:
      context: .
    env_file:
      - .env-non-dev
    container_name: fastapi_app
    command: ["/fastapi_app/docker/app.sh"]
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis
    networks:
      - custom

  celery:
    build:
      context: .
    env_file:
      - .env-non-dev
    container_name: celery_app
    command: [ "/fastapi_app/docker/celery.sh", "celery" ]
    depends_on:
      - redis
    networks:
      - custom

  flower:
    build:
      context: .
    env_file:
      - .env-non-dev
    container_name: flower_app
    command: [ "/fastapi_app/docker/celery.sh", "flower" ]
    depends_on:
      - redis
      - celery
    ports:
      - 5555:5555
    networks:
      - custom


  prometheus:
    depends_on:
      - app
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9091:9090
    networks:
      - custom

  grafana:
    image: grafana/grafana:main
    container_name: grafana
    restart: unless-stopped
    volumes:
       - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    ports:
      - 3001:3000
    env_file:
      - ./grafana/config.monitoring
    networks:
      - custom
    user: "0"

networks:
  custom:
    driver: bridge

volumes:
  postgres_data:
